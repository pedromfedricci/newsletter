name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.5.11
  SQLX_FEATURES: postgres,native-tls
  APP_ENVIRONMENT: ci
  DATABASE_URL: postgres://postgres:password@localhost:5432/newsletter

jobs:
  tools:
    name: Install tools
    runs-on: ubuntu-latest

    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: tools

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - "5432:5432"

      redis:
        image: redis:6
        ports:
          - "6379:6379"

    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Check database
        # TODO Must apply a checking mechanism
        run: sleep 1

      - name: Migrate database
        run: |
          sqlx database create
          sqlx migrate run

      - name: Check build cache
        uses: Swatinem/rust-cache@v1

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  format:
    name: Code format
    runs-on: ubuntu-latest

    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run cargo-fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    needs: tools

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - "5432:5432"

    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy
          toolchain: stable
          override: true

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Check database
        # TODO Must apply a checking mechanism
        run: sleep 1

      - name: Migrate database
        run: |
          sqlx database create
          sqlx migrate run

      - name: Check build cache
        uses: Swatinem/rust-cache@v1

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: tools

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - "5432:5432"

      redis:
        image: redis:6
        ports:
          - "6379:6379"

    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Check database
        # TODO Must apply a checking mechanism
        run: sleep 1

      - name: Migrate database
        run: |
          sqlx database create
          sqlx migrate run

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: >
            --ignore-tests
            --avoid-cfg-tarpaulin'
            --out Xml
